BigO:
- bỏ qua constant: O(2n)->O(n),  O(n+1) -> O(n), ...
- chỉ giữ phần quyết định:  O(x! + 2n) -> O(x!), O(N + logN) -> O(N),...
- từ cao đến thấp:
 + ...
 + x! -> 2^x -> x^2 -> xlogx -> x -> logx -> ...
- đệ qui: 
  + time: O( branch ^ depth ), chẳn hank O(2^n)
  + space: O( depth ) hoặc O(N)
- 2 input: giả sử func f(int[] a, int[] b)
           và có 2 vòng lặp lồng nhau -> O (a*b), chứ không phải O(N^2)
